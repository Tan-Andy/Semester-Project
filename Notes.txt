Semester-Project
Different aspects: File I/O
Processing
GUI/Control

File I/O
Gather metadata info to display
Store data into an array (Pointers)
Send array to Processing
Recieve new array to package back into a new wav file
Use Lancaster's header

Processing
Recieve what type of processing and the array to process
Processes:
Normalization
Echo
Gain Adjustment
Send modified array back to File i/o

GUI/Control:
GUI:
Start: Present start menu
If user selects quit, exit program
Else
Request filename from user
Open file specified by filename
If file does not exist or file is not wav file
display error message and goto start
else
read file metadata
(1) display metadata to user
present user with processor menu
If user selects processor option
request output filename
run processor
save file
goto Start

Control:
Send and recieve information from the other branches

Other
Classes: Wav, WavReader, 
Abstract Classes:
Wav struct 

Interface/abstract class
Little Endian converter

Later
Inheritance, composition
Templates? Maybe used for different bit rate during storage


Wav file -> binary file->array of binary (unsigned char pointer)-> 
First 4 bytes ascii name: Hexadecimal 52 49 46 46 = RIFF 
4 bit chunk size: 24 08 00 00 each set is a byte
4 bits file format: 57 41 56 45
4 sub chunk format: 66 6D 74 20 FMT(space)

128 is the 0 value

More intermediate values in between with 16 bit
Look into coercion
big endian vs little endian 1000 1000 0001
Wav reader file
Wav Header Struct
Wav Class
Wav printer class
